1). An integer is defined to be an even subset of another integer n if every even factor of m is also a
factor of n. For example 18 is an even subset of 12 because the even factors of 18 are 2 and 6 and
these are both factors of 12. But 18 is not an even subset of 32 because 6 is not a factor of 32.
Write a function with signature int isEvenSubset(int m, int n) that returns 1 if m is an even subset
of n, otherwise it returns 0.
2). Given a positive integer k, another positive integer n is said to have k-small factors if n can be
written as a product u*v where u and v are both less than k. For instance, 20 has 10-small factors
since both 4 and 5 are less than 10 and 4*5 = 20. (For the same reason, it is also true to say that 20
has 6-small factors, 7-small factors, 8-small factors, etc). However, 22 does not have 10-small
factors since the only way to factor 22 is as 22 = 2 * 11, and 11 is not less than 10.
Write a function hasKSmallFactors with signatuare
boolean hasKSmallFactors(int k, int n)
which returns true if n has k-small factors. The function should return false if either k or n is not
positive.
Examples:
hasKSmallFactors(7, 30) is true (since 5*6 = 30 and 5 &lt; 7, 6 &lt; 7).
hasKSmallFactors(6, 14) is false (since the only way to factor 14 is 2*7 = 14 and 7 not less than 6)
hasKSmallFactors(6, 30) is false (since 5*6 = 30, 6 not less than 6; 3 * 10 = 30, 10 not less than 6; 2 *
15 = 30, 15 not less than 6)
3) A twinoid is defined to be an array that has exactly two even values that are adjacent to one
another. For example {3, 3, 2, 6, 7} is a twinoid array because it has exactly two even values (2 and
6) and they are adjacent to one another. The following arrays are not twinoid arrays.
{3, 3, 2, 6, 6, 7} because it has three even values.
{3, 3, 2, 7, 6, 7} because the even values are not adjacent to one another
{3, 8, 5, 7, 3} because it has only one even value.
Write a function named isTwinoid that returns 1 if its array argument is a twinoid array. Otherwise
it returns 0.
If you are programming in Java or C#, the function signature is
int isTwinoid (int [ ] a);
If you are programming in C or C++, the function signature is
int isTwinoid(int a[ ], int len) where len is the number of elements in the array.
4)A balanced array is defined to be an array where for every value n in the array, -n also is in the
array. For example {-2, 3, 2, -3} is a balanced array. So is {-2, 2, 2, 2}. But {-5, 2, -2} is not
because 5 is not in the array.
Write a function named isBalanced that returns 1 if its array argument is a balanced array.
Otherwise it returns 0.
If you are programming in Java or C#, the function signature is
int isBalanced (int [ ] a);
If you are programming in C or C++, the function signature is
int isBalanced(int a[ ], int len) where len is the number of elements in the array.
5) 2. Write a function fill with signature 
int[ ] fill(int[ ] arr, int k, int n) 
which does the following: It returns an integer array arr2 of length n whose first k elements
are the same as the first k elements of arr, and whose remaining elements consist of
repeating blocks of the first k elements.  You can assume array arr has at least k
elements. The function should return null if either k or n is not positive. 
Examples: 
fill({1,2,3,5, 9, 12,-2,-1}, 3, 10) returns {1,2,3,1,2,3,1,2,3,1}.
fill({4, 2, -3, 12}, 1, 5)  returns {4, 4, 4, 4, 4}.
fill({2, 6, 9, 0, -3}, 0, 4) returns null.
6) 3. An array is said to be hollow if it contains 3 or more zeroes in the middle that are
preceded and followed by the same number of non-zero elements. Write a function
named isHollow that  accepts an integer array and returns 1 if it is a hollow array,
otherwise it returns 0 
Examples:  isHollow({1,2,4,0,0,0,3,4,5}) returns 1.  isHollow ({1,2,0,0,0,3,4,5})
returns 0. isHollow ({1,2,4,9, 0,0,0,3,4, 5}) returns 0.  isHollow ({1,2, 0,0, 3,4}) returns 0. 
If you are programming in Java or C#, the function signature is
int isHollow(int[ ] a). 
If you are C or C++ programmer
int isHollow(int[ ] a, int len)            
where len is the number of elements in the array.  

1. An integer array is said to be evenSpaced, if the difference between the largest value
and the smallest value is an even number. Write a function isEvenSpaced(int[] a) that will
return 1 if it is evenSpaced and 0 otherwise. If array has less than two elements, function
will return 0. If you are programming in C or C++, the function signature is:
   int isEvenSpaced (int a[ ], int len) where len is the number of elements in the array.
 
Examples
Array Largest value Smallest value Difference Return value
{100, 19, 131, 140} 140 19 140 -19 = 121 0
{200, 1, 151, 160} 200 1 200 -1 = 199 0
{200, 10, 151, 160} 200 10 200 -10 = 190 1
{100, 19, -131, -140} 100 -140 100 - (-140 ) = 240 1
{80, -56, 11, -81} 80 -81 -80 - 80 = -161 0

8)An Sub array is defined to be an array in which each element is greater than sum of all
elements after that. See examples below:
 
{13, 6, 3, 2} is a Sub array. Note that 13 &gt; 2 + 3 + 6, 6 &gt; 3 + 2, 3 &gt; 2.
 
{11, 5, 3, 2} is a NOT a Sub array. Note that 5 is not greater than 3 + 2.
 
 

Write a function named isSub that returns 1 if its array argument is a Sub array, otherwise
it returns 0.
 
If you are programming in Java or C#, the function signature is:
   int isSub (int [ ] a)
 
If you are programming in C or C++, the function signature is:
   int isSub (int a[ ], int len) where len is the number of elements in the array.

9)An isSym (even/odd Symmetric) array is defined to be an array in which even numbers
and odd numbers appear in the same order from “both directions”. You can assume array
has at least one element. See examples below:
 
{2, 7, 9, 10, 11, 5, 8} is a isSym array.
 
Note that from left to right or right to left we have even, odd, odd, even, odd, odd, even.
 
{9, 8, 7, 13, 14, 17} is a isSym array.
 
Note that from left to right or right to left we have {odd, even, odd, odd, even, odd}.
 
However, {2, 7, 8, 9, 11, 13, 10} is not a isSym array.
From left to right we have {even, odd, even, odd,  odd, odd, even}.
From right to left we have {even, odd,  odd, odd, even, odd, even},
whichis not the same.
 

Write a function named isSym that returns 1 if its array argument is a isSym array,
otherwise it returns 0.
 
If you are programming in Java or C#, the function signature is:
   int isSym (int [ ] a)
 
If you are programming in C or C++, the function signature is:
   int isSym (int a[ ], int len) where len is the number of elements in the array.
   
 11) A Meera array is defined to be an array such that for all values n in the array, the value
2*n is not in the array. So {3, 5, -2} is a Meera array because 3*2, 5*2 and -2*2 are not in
the array. But {8, 3, 4} is not a Meera array because for n=4, 2*n=8 is in the array.
 
Write a function named isMeera that returns 1 if its array argument is a Meera array.
Otherwise it returns 0.
 
If you are programming in Java or C#, the function signature is
   int isMeera(int [ ] a)
 
If you are programming in C or C++, the function signature is
   int isMeera(int a[ ], int len) where len is the number of elements in the array.
   
12) Write a function named factorTwoCount that returns the number of times that 2 divides
the argument.
 
For example, factorTwoCount(48) returns 4 because
48/2 = 24
24/2 = 12
12/2 = 6
6/2 = 3
2 does not divide 3 evenly.
 
Another example: factorTwoCount(27) returns 0 because 2 does not divide 27.
 
The function signature is
   int factorTwoCount(int n);
